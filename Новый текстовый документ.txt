#include <iostream>
#include <string>
#include <fstream>
#include <vector>

using namespace std;

class Employee{
private:
    string name;
    string division;
    int salary;
public:
    Employee(string name, string division, int salary) : name(name), division(division), salary(salary){};
    void print(){
        cout << name << endl<< division << endl << salary;
    }
};
int main() {
    string buff;
   string name, division;
   int salary;
   vector<Employee>emp;
    // ofstream fout("../Employee.txt", ios_base::app);
//   for(int i  = 0; i < 1; i++)
//   {
//   cin >> name >> division >> salary;
//   emp.emplace_back(name,division, salary);
//   fout << i << "#"<< emp[i].name << " " << emp[i].division << " " << emp[i].salary << "123" << endl;
//
//   }
    ifstream fin("../Employee.txt");
    getline(fin,buff,'#');

//
//    getline(fin,buff);
      cout << buff << endl;
    getline(fin,buff,'#');
    emp.emplace_back(buff,"123",salary);


    emp[0].print();
    cout << emp.empty();
    emp.erase(emp.begin());
    cout << emp.empty();

    fin.close();


    return 0;
}



		vector<Professor*> profArr;

		for (auto t : test) {

			if (reinterpret_cast<Professor*>(t) != nullptr)
				profArr.push_back(reinterpret_cast<Professor*>(t));
		}







		test.push_back(this);

		vector<Employee*> test;


		 friend std::ostream& operator<<(std::ostream &out, const Department &department)
            {
                out << "Department: ";
                for (unsigned int count = 0; count < department.m_worker.size(); ++count)
                    out << department.m_worker[count]->getName() << ' ';
                out << '\n';